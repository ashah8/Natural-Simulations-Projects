rectMode(CENTER);
var Spaceship = function(){
    this.position = new PVector(200,200);
    this.velocity = new PVector(0, 0);
    this.acceleration = new PVector(0, 0);
    this.movingSpeed = 1;
    this.rotateAngle = 0; 
};


//In this case, a simplified version of the force = mass * acceleration is being used. The formula here is force = acceleration. 
Spaceship.prototype.applyForce = function(force){
    this.acceleration.add(force);
};

Spaceship.prototype.update = function(){
    this.velocity.add(this.acceleration);
    this.position.add(this.velocity);
    this.acceleration.set(0, 0);
};

Spaceship.prototype.calculateThrustForce = function(){
    return (new PVector (cos(this.rotateAngle)*this.movingSpeed, sin(this.rotateAngle)*this.movingSpeed));
};
Spaceship.prototype.turnLeft = function(){
    this.rotateAngle-=4;
};

Spaceship.prototype.turnRight = function(){
    this.rotateAngle+=4;
};
Spaceship.prototype.display = function(){
    pushMatrix();
    translate(this.position.x, this.position.y);
    rotate(this.rotateAngle+90);
    fill(0, 1, 1, 0);
    stroke(0);
    triangle(0, -10, 8, 5, -8, 5);
    rect(-4, 5, 3, 2);
    rect(3, 5, 3, 2);
    popMatrix();
};
Spaceship.prototype.checkEdges = function(){
    if(this.position.x!==constrain(this.position.x, 0, width)){
        this.position.x = abs(this.position.x-width);
    }
    if(this.position.y!==constrain(this.position.y, 0, height)){
        this.position.y = abs(this.position.y-height);
    }
};
var ship = new Spaceship();
draw = function() {
    background(245, 228, 245);
    var airDrag = ship.velocity.get(); //this is friction, if I do not apply a simple friction than the spaceship will keep on moving when thrust force is applied which is extremely unrealistic because in the real world forces slow things down
    airDrag.mult(-0.01); 
    ship.applyForce(airDrag);
    ship.update();
    ship.checkEdges();
    ship.display();
};
keyPressed = function(){
    if (keyCode === RIGHT){
        ship.turnRight();
    }else if (keyCode === LEFT){
        ship.turnLeft();
    }else if (keyCode === 90/*z*/){
        ship.applyForce(ship.calculateThrustForce());
    }
};
