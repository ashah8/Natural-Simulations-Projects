var GenericFly = function(){
    this.acceleration = new PVector(0, 0);
    this.velocity = new PVector(0, 0);
    this.position = new PVector(random(0, width), random(0, height));
    this.timeToLive = 999;
};

GenericFly.prototype.update = function(){
    this.acceleration = new PVector(random(-2, 2), random(-2, 2));
    this.velocity.add(this.acceleration);
    this.velocity.limit(5);
    this.position.add(this.velocity);
    this.timeToLive = this.timeToLive - 2;
};

GenericFly.prototype.isDead = function() {
  if (this.timeToLive < 0) {
      return true;
  } else {
      return false;
  }
};

GenericFly.prototype.display = function(){
    pushMatrix();
    translate(this.position.x, this.position.y);
    fill(0, 0, 0);
    ellipse(0, 0, 4, 4);
    fill(255, 255, 255);
    ellipse(1, 1, 11, 2);
    popMatrix();
};

GenericFly.prototype.checkEdges = function(){
    if (this.position.x > width){
        this.position.x = 0;
    }else if (this.position.x < 0){
        this.position.x = width;
    }
    if (this.position.y > height){
        this.position.y = 0;
    }else if (this.position.y < 0){
        this.position.y = height;
    }
};

GenericFly.prototype.run = function(){
    this.update();
    this.checkEdges();
    this.display();
};

var OrangeBigFly = function(){
    GenericFly.call(this);
};

OrangeBigFly.prototype = Object.create(GenericFly.prototype);

OrangeBigFly.prototype.display = function(){
    pushMatrix();
    translate(this.position.x, this.position.y);
    fill(255, 119, 0);
    ellipse(0, 0, 10, 10);
    fill(255, 255, 255);
    ellipse(1, 1, 11, 2);
    popMatrix();
};
var flySystem = function(){
    this.flies = [];
};

flySystem.prototype.addFlies = function(){
    this.flies.push(new OrangeBigFly());
    this.flies.push(new GenericFly());
};

flySystem.prototype.run = function() {
  for (var i = this.flies.length-1; i >= 0; i--) {
      var p = this.flies[i];
      p.run();
     if (p.isDead()) {
        this.flies.splice(i, 1);
      }
    }
};

var Swarm = new flySystem();

draw = function() {
    background(36, 214, 170);
    Swarm.run();
};

var FireParticleSystem = function(){
    this.particles = [];
};

var FireParticle = function(){
    this.velocity = new PVector(0, 0);
    this.acceleration = new PVector(0, -0.5);
    this.position = new PVector(200+random(-20, 20), 400);
    this.size = new PVector(20, 20);
    this.life = 255;
    };

FireParticle.prototype.run = function(){
    this.update();
    this.display();
};

FireParticleSystem.prototype.addParticle = function() {
    this.particles.push(new FireParticle());
};

FireParticle.prototype.update = function(){
    this.velocity.add(this.acceleration);
    this.velocity.limit(5);
    this.position.add(this.velocity);
    this.life = this.life - 3;
};
FireParticleSystem.prototype.run = function() {
  for (var i = this.particles.length-1; i >= 0; i--) {
      var p = this.particles[i];
      p.run();
      if (p.isDead()) {
        this.particles.splice(i, 1);
      }
    }
};
FireParticle.prototype.isDead = function()
{
    if (this.life <= 0) {
        return true;
    }
    if (this.life > 0){
        return false;
    }
};
FireParticle.prototype.display = function(){
    fill(212, 118, 4, this.life);
    noStroke();
    ellipse(this.position.x, this.position.y, this.size.x, this.size.y);
};
var fire = new FireParticleSystem();
draw = function() {
    background(161, 245, 241);
    fill(147, 186, 134);
    rect(0, 350, 400, 104);
    Swarm.run();
    fire.run();
    fire.addParticle();
};
mouseClicked = function(){
    Swarm.addFlies();
};
